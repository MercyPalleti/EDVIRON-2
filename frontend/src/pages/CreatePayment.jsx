import React from 'react'
import api from '../api/axios'
import Navbar from '../components/Navbar'

export default function CreatePayment() {
  const [schoolId, setSchoolId] = React.useState('')
  const [amount, setAmount] = React.useState('')
  const [callbackUrl, setCallbackUrl] = React.useState(window.location.origin + '/')
  const [studentName, setStudentName] = React.useState('')
  const [studentId, setStudentId] = React.useState('')
  const [studentEmail, setStudentEmail] = React.useState('')
  const [studentPhone, setStudentPhone] = React.useState('')
  const [loading, setLoading] = React.useState(false)

  async function submit(e) {
    e.preventDefault()
    if (!schoolId || !amount || !studentId || !studentName || !studentEmail || !studentPhone) {
      return alert('All fields are required')
    }

    setLoading(true)
    try {
      const payload = {
        order_amount: Number(amount),       // ✅ backend expects order_amount
        return_url: callbackUrl,            // ✅ backend expects return_url
        student_info: {
          id: studentId,
          name: studentName,
          email: studentEmail,
          phone: studentPhone
        },
        // optional: custom_order_id can be generated by backend if missing
      }

      const res = await api.post('/create-payment', payload)
      const redirectUrl = res.data?.payment_link || res.data?.payment_url || res.data?.url
      if (redirectUrl) {
        window.location.href = redirectUrl
      } else {
        alert('Payment created. Response: ' + JSON.stringify(res.data))
      }
    } catch (err) {
      console.error(err)
      alert(err.response?.data?.message || 'Failed to create payment')
    } finally {
      setLoading(false)
    }
  }

  return (
    <>
      <Navbar />
      <div className="p-6">
        <h1 className="text-2xl mb-4">Create Payment</h1>
        <form onSubmit={submit} className="max-w-md space-y-3 bg-white dark:bg-gray-800 p-4 rounded shadow">
          <div>
            <label className="block text-sm">School ID</label>
            <input value={schoolId} onChange={e=>setSchoolId(e.target.value)} className="w-full border p-2 rounded" />
          </div>
          <div>
            <label className="block text-sm">Amount (INR)</label>
            <input type="number" value={amount} onChange={e=>setAmount(e.target.value)} className="w-full border p-2 rounded" />
          </div>
          <div>
            <label className="block text-sm">Callback URL</label>
            <input value={callbackUrl} onChange={e=>setCallbackUrl(e.target.value)} className="w-full border p-2 rounded" />
          </div>
          <div>
            <label className="block text-sm">Student Name</label>
            <input value={studentName} onChange={e=>setStudentName(e.target.value)} className="w-full border p-2 rounded" />
          </div>
          <div>
            <label className="block text-sm">Student ID</label>
            <input value={studentId} onChange={e=>setStudentId(e.target.value)} className="w-full border p-2 rounded" />
          </div>
          <div>
            <label className="block text-sm">Student Email</label>
            <input type="email" value={studentEmail} onChange={e=>setStudentEmail(e.target.value)} className="w-full border p-2 rounded" />
          </div>
          <div>
            <label className="block text-sm">Student Phone</label>
            <input type="tel" value={studentPhone} onChange={e=>setStudentPhone(e.target.value)} className="w-full border p-2 rounded" />
          </div>
          <button disabled={loading} className="px-4 py-2 bg-green-600 text-white rounded">
            {loading ? 'Creating...' : 'Create Payment'}
          </button>
        </form>
      </div>
    </>
  )
}
